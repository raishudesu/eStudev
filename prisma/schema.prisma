// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Thread {
  id        Int       @id @default(autoincrement())
  author    User      @relation(fields: [authorId], references: [id])
  authorId  Int
  title     String
  category  String
  stars     Int
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  comments  Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  thread    Thread   @relation(fields: [threadId], references: [id])
  threadId  Int
  content   String
  stars     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  replies   Reply[]
}

model Reply {
  id        Int      @id @default(autoincrement())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  comment   Comment  @relation(fields: [commentId], references: [id])
  commentId Int
  content   String
  stars     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Follows {
  id          Int      @id @default(autoincrement())
  follower    User     @relation("follower", fields: [followerId], references: [id])
  followerId  Int
  following   User     @relation("following", fields: [followingId], references: [id])
  followingId Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  email     String    @unique
  gender    String
  bio       String?
  links     String[]
  followers Follows[] @relation("follower")
  following Follows[] @relation("following")
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  threads   Thread[]
  comments  Comment[]
  replies   Reply[]
}
